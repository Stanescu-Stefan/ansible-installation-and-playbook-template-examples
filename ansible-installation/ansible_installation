#in this project, we are installing ansible on the control node and establish secure communication
#between the control node and a managed node.
#for referrence it will be only 1 managed node, but the commands can be replicated on multiple nodes if needed
#later, in the playbook examples, we will create a playbook that allows creating ansible user(s) and establishing SSH key communication on
#multiple nodes to eliminate manual work and improve automation

#Installing Ansible on the control node
#connect to the server(control node) you want to install Ansible on

#ssh user@ip_of_control_node

#first we need to install epel-release repository

sudo yum install -y epel-release

#after that we can install Ansible

sudo yum install -y ansible

#after installing Ansible, we need to create an Ansible user on both the
#control node and also the managed node/s(host/s)

#on the control node

sudo useradd ansible
sudo passwd ansible

#on the managed node, ssh to it(ssh user@ip_of_managed_node)
#then create an ansible user on the machine and after that logout to go back to the control node

sudo useradd ansible
sudo passwd ansible

#write down the password as we will use it later
logout

#we need to create a public/private key pair, so the ansible user
#could log #into the managed node without a password

#switch to the ansible user on the control node

sudo su - ansible

#generate a new SSH key(you can accept the default settings by pressing Enter when prompted)

ssh-keygen

#now we copy the SSH key to the managed node, using the password we created above

ssh-copy-id managed_node

#after copying the SSH key, we test that a password is no longer needed to connect to the managed node

ssh managed_node

#and logout out of it

logout

#now we need to setup the ansible user on the managed node to be able to sudo command without the need of a password

#login into the managed node - ssh user@ip_of_managed_node

#we need to edit the sudoers file

sudo visudo

#we need to add this line to end of the file: ansible ALL=(ALL) PASSWD: ALL

#save the file(:wq) and logout out of the managed node

logout

#for testing purposes we will create an inventory file and a small playbook on the control node to be able to install something simple
#like git on the managed node

#on the control node, if you aren't already logged as ansible user, please switch to it(sudo su - ansible) and create a small inventory file

vim /home/ansible/inventory

#add the name of the managed node in the first line and then save the file(:wq)
#or you could just write a command: echo "managed_node" > /home/ansible/inventory
#either way, works fine

#now we need to create an Ansible playbook on the control node, then execute it to install git on the managed node

vim /home/ansible/install-git.yml

#add the following text to the playbook

--- # install git on managed node

- hosts: managed_node
  become: yes
  tasks:
  - name: install git
    yum:
    name: git
    state: latest

#save the file with :wq then run the playbook

ansible-playbook -i /home/ansible/inventory install-git.yml

#we need verify that the playbook ran successfully
#we log into the managed node

ssh managed_node

#and check if git is installed

which git
